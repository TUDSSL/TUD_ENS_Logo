%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 2022.1 (TeX Live 2022)  Copyright 2022 Radical Eye Software
%%Title: tud-es-logo-color.dvi
%%CreationDate: Wed Dec 14 17:08:20 2022
%%BoundingBox: 125 756 253 782
%%DocumentFonts: NimbusSanL-Bold
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E tud-es-logo-color
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2022.12.14:1808
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 2019-2022 The LaTeX Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
/color.sc { } def
TeXDict begin
/TeXcolorseparation { setcolor } def
end
true setglobal
/pdf.globaldict 4 dict def
false setglobal
/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
     pdf.dest.y pdf.tmpd mul add
     pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
           pdf.count 0 eq { exit } if
           counttomark 2 roll
           1 index /Rect eq
             {
               dup 4 array copy
               dup dup
                 1 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add sub
                 3 exch put
               dup
                 pdf.outerbox 2 get
                 pdf.linkmargin add
                 2 exch put
               dup dup
                 3 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add add
                 1 exch put
               /pdf.currentrect exch  def
               pdf.breaklink.write
                 {
                   pdf.currentrect
                   dup
                     pdf.outerbox 0 get
                     pdf.linkmargin sub
                     0 exch put
                   dup
                     pdf.outerbox 2 get
                     pdf.linkmargin add
                     2 exch put
                   dup dup
                     1 get
                     pdf.baselineskip add
                     1 exch put
                   dup dup
                     3 get
                     pdf.baselineskip add
                     3 exch put
                   /pdf.currentrect exch def
                   pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                exch
              repeat
              pdf.currentrect
              dup
                pdf.outerbox 0 get
                pdf.linkmargin sub
                0 exch put
              dup dup
                1 get
                pdf.baselineskip add
                1 exch put
              dup dup
                3 get
                pdf.baselineskip add
                3 exch put
              dup 2 index 2 get  2 exch put
              /pdf.currentrect exch def
              pdf.breaklink.write
              SDict /pdf.pdfmark.good false put
              exit
            }
            { pdf.count 2 sub /pdf.count exch def }
          ifelse
        }
      loop
    }
  if
  /ANN
}
  def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

/preview@version(13.1)def

userdict begin/preview-bop-level 0 def/bop-hook{/preview-bop-level
dup load dup 0 le{/isls false def/vsize 792 def/hsize 612 def}if 1
add store}bind def/eop-hook{/preview-bop-level dup load dup 0 gt{1
sub}if store}bind def end

/preview@tightpage true def (compatibility PostScript comment for dvipng<=1.5

userdict begin/bop-hook{7{currentfile token not{stop}if 65781.76 div
DVImag mul}repeat 72 add 72 2 copy gt{exch}if 4 2 roll neg 2 copy lt{exch}if
dup 0 gt{pop 0 exch}{exch dup 0 lt{pop 0}if}ifelse 720 add exch 720
add 3 1 roll 4{5 -1 roll add 4 1 roll}repeat <</PageSize[5 -1 roll
6 index sub 5 -1 roll 5 index sub]/PageOffset[7 -2 roll [1 1 dtransform
exch]{0 ge{neg}if exch}forall]>>setpagedevice//bop-hook exec}bind def
end

userdict (some extra code to avoid dvipng>=1.6 unknown special: 7{currentfile token not{stop}if 65781.76 div }))
pop

userdict begin/bop-hook{preview-bop-level 0 le{7{currentfile token
not{stop}if 65781.76 div DVImag mul}repeat 72 add 72 2 copy gt{exch}if
4 2 roll neg 2 copy lt{exch}if dup 0 gt{pop 0 exch}{exch dup 0 lt{pop
0}if}ifelse 720 add exch 720 add 3 1 roll 4{5 -1 roll add 4 1 roll}repeat
<</PageSize[5 -1 roll 6 index sub 5 -1 roll 5 index sub]/PageOffset[7
-2 roll [1 1 dtransform exch]{0 ge{neg}if exch}forall]>>setpagedevice}if//bop-hook
exec}bind def end

 /pgfHrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def}
bind def

 /pgfVrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto }
bind def} bind def

 /pgfArgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1
add def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff
div 2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index
14 index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke
4 -1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1rgb{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRrgb} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2rgb{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfRrgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1
add def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def
/pgfcircy pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
8 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index
6 index sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff {
3 index 3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360
arc closepath stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll 4 index add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add
def /pgfcircy pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark
exch pop }bind def

 /pgfHcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 moveto dup 6 index lineto } bind def}
bind def

 /pgfVcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 exch moveto dup 6 index exch lineto
} bind def} bind def

 /pgfAcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 2 mul
1 add def 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff
div 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div
pgfheight 12 index 12 index 12 index 12 index 18 index pgfdiff { 4
index 4 index 4 index 4 index setcmykcolor pgfdir stroke 5 -1 roll
9 index add 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6
index add 5 -1 roll .5 sub } repeat mark 19 1 roll cleartomark exch
pop }bind def

 /pgfR1cmyk{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRcmyk} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2cmyk{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setcmykcolor
fill pop}bind def

 /pgfRcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 11 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 11 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 10 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
10 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 3 index
8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 11 index 11
index 11 index 11 index 17 index pgfdiff { 4 index 4 index 4 index
4 index setcmykcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6 index
add 5 -1 roll 5 index add 5 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep
add def /pgfcircy pgfcircy pgfystep add def } repeat mark 18 1 roll
cleartomark exch pop }bind def

 /pgfHgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 moveto dup 3 index lineto } bind def}
bind def

 /pgfVgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 exch moveto dup 3 index exch lineto
} bind def} bind def

 /pgfAgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 2 mul
1 add def dup 2 index sub pgfdiff div pgfheight 3 index 6 index pgfdiff
{ 1 index setgray pgfdir stroke exch 3 index add exch .5 sub } repeat
mark 7 1 roll cleartomark exch pop }bind def

 /pgfR1gray{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRgray} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2gray{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setgray
fill pop}bind def

 /pgfRgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 5 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 5 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 4 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
4 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
dup 2 index sub pgfdiff div 2 index 5 index pgfdiff { 1 index setgray
pgfcircx pgfcircy 2 index 0 360 arc closepath stroke exch 2 index add
exch .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy pgfcircy
pgfystep add def } repeat mark 6 1 roll cleartomark exch pop }bind
def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setblendmode where {pop} {/.setblendmode{pop}def} ifelse /.setfillconstantalpha
where {pop /.setopacityalpha {.setfillconstantalpha} def} {/.setopacityalpha
where {pop} {/.setopacityalpha {pop} def} ifelse} ifelse /.pgfsetfillopacityalpha{/pgffoa
exch def /.setfillconstantalpha where {pop pgffoa .setfillconstantalpha}
{/pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath
fill grestore newpath}bind def /pgfeofill{gsave pgffoa .setopacityalpha
eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}
ifelse} bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def /.setstrokeconstantalpha
where {pop pgfsoa .setstrokeconstantalpha} {/pgfstr{gsave pgfsoa .setopacityalpha
stroke grestore newpath}bind def} ifelse}bind def /pgffoa 1 def /pgfsoa
1 def /.pushpdf14devicefilter where {pop [userdict /bop-hook known
{userdict /bop-hook get aload pop} if {0 .pushpdf14devicefilter} aload
pop] cvx userdict exch /bop-hook exch put [userdict /eop-hook known
{userdict /eop-hook get aload pop} if {.poppdf14devicefilter} aload
pop] cvx userdict exch /eop-hook exch put} if systemdict /pdfmark known
not {userdict /pdfmark systemdict /cleartomark get put} if end

  /pgfwritesamplecmyk { 4 index 0 5 index pgfcheckcolorrange 255 mul
round cvi put 4 index 1 4 index pgfcheckcolorrange 255 mul round cvi
put 4 index 2 3 index pgfcheckcolorrange 255 mul round cvi put 4 index
3 2 index pgfcheckcolorrange 255 mul round cvi put pop pop pop pop
} bind def /pgfwritesamplergb { 3 index 0 4 index pgfcheckcolorrange
255 mul round cvi put 3 index 1 3 index pgfcheckcolorrange 255 mul
round cvi put 3 index 2 2 index pgfcheckcolorrange 255 mul round cvi
put pop pop pop } bind def /pgfwritesamplegray { pgfcheckcolorrange
16777215 mul round cvi 1 index 0 2 index -16 bitshift put 1 index 1
2 index 65535 and -8 bitshift put 1 index 2 2 index 255 and put pop
} bind def /pgfcheckcolorrange { dup 0.0 lt {pop 0.0} if dup 1.0 gt
{pop 1.0} if } bind def /pgfchanneldepthcmyk 8 def /pgfchanneldepthrgb
8 def /pgfchanneldepthgray 24 def /pgfcolorsamplecmyk 4 string def
/pgfcolorsamplergb 3 string def /pgfcolorsamplegray 3 string def /pgfrangecmyk
[0 1 0 1 0 1 0 1] def /pgfrangergb [0 1 0 1 0 1] def /pgfrangegray
[0 1] def
 
@fedspecial end
%%BeginFont: NimbusSanL-Bold
%!PS-AdobeFont-1.0: NimbusSanL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Sans L Bold) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -155 def
/UnderlineThickness 69 def
end readonly def
/FontName /NimbusSanL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-173 -307 1003 949} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8D62A63193C4AE94C086C1
552833DDD8F116B5DF33205AE709B3AA63DA7BEBB165B67281827B48FB5EDBED
02A1A5C0784FC57D3487DAA59520BADA1BE3FB9795669924321CE4F466CD8E3F
7E8EC2494AEE80E2DD7A48A6861AF5B9F0CCAA4A2FE2B03498EACACD6B9C39C6
A8F2E39E06BBB061CF2EC380A32EFAD0B790974BB5CC3DAF0992471456967362
77DE34813F27ABE99302F86BB4D293A37F84667E7F3DFEE4CFE9D1A676A5728C
AEB5222FF50DA97E74B2CDEBF725FBCA7015A188891C8A376B9DD8A642C4B184
B1BBF3F376A6D6E31EF1C8354DDF8039CB20FAABCB34D4749B3C8C8D6972CEB1
06B8A5AAE3AE40A91F1F2B1155681A9CC933F87528C99A2B0268B43A3E829E7F
3BD863CB52950773BD9B0731DC4992541D7DE7A055CA65DDD2317F1705C20D1F
93291BCC254CBABA425C032B3B15050D41DA14FFE1B3D684EEA428095A01E931
98D4F849B239AD9D79F4502F0271AFFB0C297F2F347BFB9C137782646F648F77
0076B85F5A929FCDEA2703333F6918B8F125627F8B505C688E30F258DED1AECF
2C86EDCD88C29249A8081731737195FAB7ADBB54743BD66511194DEE2516959B
A20701E2D97342248297425491F6C9471EC9A98E630D734DAC19721F0B324432
C8D7A0B751453F89F7008BA37BC48E0831EE3ECBD8A0A292D63CFC890B28F695
9E29AC3B4DDB78A6883B9272CE34A012A82ADEC0B6B641E3940A438A098CCFBF
C50544B94FACFD9D7AE09AD0632015F81D2F77FC6D80A42EC11D67D8A91C376C
13C8E3444CDFDE4D2A1ED021410F4D6A4E97804AE949BD913094D23108C9D384
56F11025E2D24939114B6BCF579A0315C52F3CA1BCC2860FC1A0B9FB8A37AE2F
C20C0FD44D215FC2AF737FD0339B070D54E664021240071C665DE4170DFA182D
4E385685FB41A2D85888B1149E9A766CB4F309B4E2BAA28CF1F8CC13F154032A
A1C45D1A3DD9230A4903FE5523D6EE9BC66EF49B2617BE3C1AEBFE2BE26C3778
EE778AB577C5B9E476CBB0EF69EEE350BBEA9712CD97BB2821612964B30B01E7
B08AE39BC8B715A5C11A351E060C8ACCC73F7D8B3B33CB35844961E68842CFC3
601BD2FED84DC32546F5EEEFA423BBAEE305AFA3FB216983DF61299A86F51A67
1DB10D74D95084ACE3907DCC79E6B2C358D53D1A83C0538DF2F8252B6B963B85
BB230DFCCE6BFD3D847DA4F518B81FADA81814332B622EBE6848AE6001554502
7C5D6643ED9E898E52F229400B725F50C0CC1C0B40C04D1680D51033154CDEFA
C137858D49BA7B27E4904BF8D855940AF0DF3BEEA126AB8ACC2E93B1551E750D
B24390D7F0804F28A5DD460DFAA537CC1DD8B32132A2E7C1B93BF1A2C1CFF129
1DC961C949F1641B11368B8A426B97CCCA4FE1A799E07290CC69337450707969
8C07A7B9A821AE7CAC799DDC5C6C5A4AC9E21CE0ACF1C02A9B72F3C264E40D31
BCFEBE729C666E929DD2CC04C4F66493A56A4D7F7C59675EEAF84F33556BA9EF
15C92469A7666520B873ADBFA7CB2C670B71BDEDA9725503C98440DE5CE23DAC
7D1D4D52E872037221E7F6EA9377730189C0D18861E5F87CDBD81FACC7DD8009
1F968191E7B7F96056299EA698C1A77EDC8CB025B10C08A5B355BFF415BE682F
55D46314BE428EAF295655A9E39C505CCF2C13C8343C21E274982FC4533EEA16
716151F6E7C2DC1E66CD4C0B890E4E8A7796D3DFC578A0356F0E9C2391D138D0
D9487329CCC75B1E69BE9B77107D6B5262104B9D3B06490D1261E5D021B99656
7ABFE151FA5607BDF3286232781AC94326703EEB8DCF9E74222A99B1F09378E5
799447FAEF52D31BE772DCF52FB024C8364F1BCF967FEE2B858E3DD1D270D545
6DD52043ADC089C9F1CC96E65C452DAE2678F0058AECF8482A8F9FCD33BC5F0C
3D63AB782567078B05975B4625D5BF539E5C9D34D5963E2086C854AA22C689EE
739E003209C7960E66BEFD41F70CEF7AA35548174F41D78903B40367915D4EEB
E9B3D1E6CF23E0D97980F20EFD24A6644AA26EBAF342B2A2490CFA3B4C7D0B87
94E078FF15A4159F644CC8DA765EDFE87F760D7200C559944587EAF9A8B5216B
3D9C02F00B43F697D889D0339D2FFBA5F17EF15B07460EA8E04B88C9EEEB2DB8
0D4D07B52CE914D9DADF80E6013884A89FC8D6AF6B602082FA5C9B2D9784067F
231811DA066F16583E31EDBAF6421FD5099C6A2A44F35757E5541F96F98EB26A
C14AAE1E6873FA855BB4D975D887C411A4C185B878B8003E1782E9A3484F8CFD
AECCAC87E118B957A9E69DF5E8274DA59750A144BFCF393561712972B4422D91
CC4843EC97AE75953D9928408B8B5C5D7C8AC1E980689CA5BE15C3FA96CFC2E7
5DB70BF7FE4019611CC60DB38671052E1B066084315E463DF1C32D552FD4058D
1F27766AEE23CB152D4F996FBC6332E5FB956EA157B298929B269CC3DE76240A
4DD59BC33AB6051FBD82BE3F3B87F312D21F198413961E30DBAB27B450653A2E
560BA54DB17F55E6AD61C51749CEA3D409D484B44831068B5E52E2497C830353
4A0084C58C35FFAC96A83E298B3DE87A8F245AB188317213AC1EB1507258A0C9
B8A990E56340DC786D901579C497C3EC6D98BCE6B0497E4A4A1AD67019F0CEC2
1CEAC83639A0ABEC3BE6CEE22FFC8C9FC4052DB8D75FD0F744A1470A7A67AA56
44EAFFD059A8385466AC97F5F8F4361DAA66686A89E3C4C53CA0C98C9BB1216E
DA7BC3094324CEA4FD5A9518236F5B654ABB5F5882369863B8EC11B3EABEE76B
8F151E04E1EC8C2EF8E5F422C31A65013C8296EE6A60024C7528F422DFFD3B72
A168E84519D138C233FED4D7FE0484F7A6760120FDF31447C7E8D4905084C826
AF39BE60C5CC7E02E8BA2137CAD04FC9B35F0225CE040F197084EB868C498722
2A5CF0756E45F7BEB06A442D8E30DE59B50522C8AEFA5451F931870F2A997279
9DFDBFA7D23362F1811CA9D8EBC3CCD47EB9AA39EBF6A3D5E9CE733060E9A912
DDFC06BEAB5782F56BE687B98CE96563219F82D9EEAFC6F78AF8033A688542E8
28E1E6CCC05F61819E9D2C464D0E3D7358A6A00A1C557E34D6F3B792A1257B9F
F5EB18BB80A6425EB96EAA8ACC9B26296657E7F047BFE6E513E36230A5D59B2F
B5C9EE3A2D28110E8DD2B41376B316BA24DA504C6B47F2E2057457A2BAF74DA6
34A429F9D0B47334B913FD168BD99EDC1FAB7088A9E15CEBC339BEFAAC08EED0
88561D13ABFB757B8E552BD0795515FAD3FCADC3E13281F8A4E0DEFDBA01DDDD
EF0125E3465D477147AEDBC9B65463A916F24547591825062E84BF5F3699F07B
7E0E31F556E2E019FABA5360B9827E6EC13DDDAB879CD224BD2B3BD4873BECC8
73A9C71796A29E5CB7CE178C529CD741BCF3E19A3AD3094F5C09CFB997516287
7A0A7E18DFDEDF0B7D717569ECED521DB679BF9176D2E877C9D142237E993371
6EC92EBD369F5E3203005A55E0EC96BEF80AFCC65AF614080C54EA5F06D14E4F
B96F0F69193E868789380DC127C1A3A7101270D15AA6590DA4E9FFFDE23B9AFB
DC82C3CE981F630D98F44524D7CAA775E8F2529AE564B40248FDEC03A564E57F
914969A1F2D001A5D7C9A8DD908552062B6801C282FEB8B53E290D982B5C618C
998FD3E49C0C1B8195DA61706EB1035A051B622E05E600E47F18EA272BB8EC45
E5F326A3FEBB556E37DA741FAD3979A10AEB3BFD6B0AB17CFBB43E2EDB8C0590
784CCB1702C8343D106837421CCC34C24C9DB151A1447EC9C5482FFDF08D2C3C
32779D049014BC248112DB2E76B705157D8FF54702D2F9D1AB2394ACAD9C980F
C6F26BBC4B98AA0F9624D8678DD4D0E5EB772AAEB666A158A5D83B7E0FBE24C3
092C18886CC8AF42D9E660AEFE482EB4677D4770C191FC46AFA0F5CB01CA73C6
3CB78C98D70813797EF14F4E2BCE892F76208A59CD185AE703FD82DF8A76C951
98A864BA29B2EE09FDC4E89D5BCED5F709BF07A437E697C763680B1A79007130
F983B9CA4D196416125566661874BB26A8167E4552C3CA41C73730F472A7A627
29FBF28C8966D65148DFC6B281AA9D6CCC21592261A181A527BAA2AD4F426E59
4CB35E312710D48AD36C3936320DF2C4113755D38F0B959DD34D98A0D0401AD3
1560C57B0D922B8384813E560211473610D33CF753900FFFC8892DA1D9E5D304
2D125734EB53A8090EE56338E3475851AFE225349BD9936E274ED7A5CFCC0057
D719F666B3F4FD6493CA2A307B3D99A7E2A0E8BC3DC937E1EDFAABFE069E371F
DBB88E24E61EF1A4425F9218A5ED3DC91E5E50CE59BF04C72EB674E5C394D0D2
2258A37AAC3AE51CEFD4CA263FCFD9B41A4BF1D71C8C6D560EDDD8A901220A97
E3BDD89944986C15BEF3EA705E77AEC7686E7239AE6BEF8873E2414668CB1B6F
29225D3F1730662979FD709E8ED21757A638B2E6B4AF9D5C83C94E701922AACC
8882547AC619B71532B552E56D3F05CA0DFF5AB1BA1C0D6444AFF9AA7F7138EA
043883C3FE759DC1E6400EDEE1D79081462E3701D487840301B22A3F138D3B45
D2739DECDDCDED8E9BADC13482F2F6B0E45E4BE3E27CECE324917C5A99F4A324
99559A64768B17FECFA7C2E70A4086F25183DAA9D8861E08EBA1C8F911AEDE79
3A435F04B0A8BFEE7C64ED56B902B8F085FC7A58576F23CD19CEF83ED66EABA8
CF152A1A1B2D4370CF6C8FDB960B9CB9168AF954039F9FFBA6E631CBC454EF04
A65AE32E0E8CBC71BF221B38CB47D65D1CF750ACCD72489285A98C1C894631CA
C1A3DFB685A464DD849665C630308AD9ED1F2FB5C19B4FA9B1170D32B36AEC75
A8925814784C63243BF85BA173B781E2B07FCE07DC91B4D6DBFAD29B9E026CCD
BE35307B0DEFA68A11B31955F9C28AAEA34C41AE1A24907EB47030EBC89CFEF1
55F9CAB0B6C905D7B122C5336652F71F130C31ED8EECB230A43DDE5BB0252BEB
0EF9D8235977B315C6B061EF8AAC9A568E3F27DF88EED64E45DD9874A61523D2
319653DA993D7794F86F8C3939211DEE1C069A2B3ED69072069A445800D3D730
F0AA170346EB6487282382FB1854E2314C0C34DB353ED729C45C7ABE388DC671
0B4622165EB044723C561F67D0DE0A938349781566942BE51E0EAD7AC0711A5D
A64BA9820BF4263C6099B6D3B7D8B111D3A29C74A59723D8FD9CD431750FEA12
378842B8F5BE0F732F55DC22ACC3195E9040B7DEC0E8B841FEFC57F5C501E9E2
A5E16116D848CE70E65186A6356BF1FF9B354CCBEAA567FE5AE6492724663AA6
A96DBD57107CFD10591D6FB6759CFC6816C95D024E65FAC7A812EAEA0491E5B0
082D3715C38FE1DF808A22F93D918DC1DB137DCD3A64007675160341CA0903B8
A47D365EBDD6E2223145BB57CB9123D8C197BF4B50A727E315F880432D749F10
4795127E464AEAB154DFC2C08F8C1098BF71196B775C4AB396E7932A5E64E2E4
17C6B64D84B19F7C2D7C143E287EF8B927C361CD8E3DE146AEC03E2E23107132
137A3149FCDD0733C148B5A052196AB08680F5ECC44BAEB2FC45311609C9C9CA
768F3A1F8E41F0090D8ACC320AA4307FCAD5DAA2DE6C0097EC1BC552EBE9B4BE
DDDDF27B0F0415583DFB8BC9991B1994C5D9B2E4DD1F6CB7CAD2C19DF7965B8F
5DA833999F9D8865D8A7FEED34D4B3BB450A1A5A1BBC6051A1F0E5EFEAA8C7D2
D8DEE7AF696EF5BA2C5F5AD53C8DD8710ACDB3786A919FB356CC2695CB227111
60D7C2D3174873F55307E929B392CE3475109E211E2EB186FBFD22B68F30AB29
E8F16BEB88A6CFF09789497821A30DD12D6983FA9D95A67EE2C1C07595C0A0E7
9CB0500EE02F9B9B8774237EF1899A326BEAF8EDE7CBFA68CF7ED1772F7CC3B2
0A15FFEF0CADFD9740BC6D5E1B7E6B270128639A86DC6412958577C144591984
D9E8EDCC502037451B79C52B101ADAA48FB0A4614612258B25E6B018462BEBE1
7138AA07373412B44023BA4E204D1C1A5B0B156A0E9BA31F748D236F1FB4954B
BC19648D8969EB7DA7468011420DBE034D5AB67817DA21F12133C9DEF549B35B
619754547362FEF57A6FB752A972337E149C2E349F66FF7CD953856542DD8CD6
7398F1A8D54D0D13D2A44C772791BC2912C369699E1F2891DC185258A8EC512B
229BFACA0785AA219F76D05678764C9B234E48374373F0D614AD3A913C50AB21
E6771DB393A0195B5F485B2BCE0103512425F32A6F43FF4C33A27E73298F8DD1
F09BB319725E4813E0578268ED792BF1A39234E83591FD80864694290DDCD2FF
6BC7B1FBD03965653161D97470B84C0C3823333D1DE1ECBED389922CB1E7391F
2600E9728B7CF7F5E89B83DC70BFB8279566FDC0710E143E8759019E60DFBACE
48BA2EC7B56F8D7C78433E06D1675A066132D5E04E53E6F93B1B12FFB7E08C14
E4DBA72F177C2361A599B81F984C56191788BEA871D16147532483DF1A3C404C
BDEC083C41D299CEA1A03F13177F4AEA91DF5781CB8C32EEED0CD6495A7D1F18
FCEDA70E2D99BC34B6527212DD1775C4696DD1F9463006F6AB2EC17F47F28199
C34B8822AE972F60750D782CC77659A4E722FADCCDDB4273AC81C68EBCE7E460
3695033FA85FA92A7D47211ABE4D32CD6ACD54FEF26F10FC82D63BADC1D27B07
F2E4CEC85BB566D64749E26368C2C1CC8B9153A7CEAE70D8445B07E6A9BC690E
3E21FA9F5800FD9796B75DAEDF65A4CA3A99704E0D90ABFCA5E0EE5A684DE24A
07AF18A06BC7543FDF3A277E3AD48A194A714E2362928F7451FA6724CF5ECD55
B2C1F174F5F594BC6ACDA87D31362C3E5D6B074CD3EAEA8D2FE738F55FF25ABB
75E16CFFEB450C2A0AF50210BC1522DA05C59DA756D8CE2AABABAF3C3EB6A574
59F115741BF4FA7736B1F03705A5EAC90A44B7C4FA1EAF54E20045EBE43B1E7A
FCB8F52F90125501337D3D039A08FD242AF6709688E67B9C31CFFB04E914B2C8
683F5AFA1048648DAEC52CBC62DB9BB3B4FA51E28932A76531D5935D84A7DF5C
B4ED92055C7D4B4CC62CBBC61A073530757F79FB5420AE1C26F89C7212F1F68F
F20878D4F1785ED021CCD79F19BBAE378CB570766152A9965D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099154 1000 600 600 (tud-es-logo-color.dvi)
@start /Fa 134[115 4[69 115 5[184 7[115 126 1[126 14[138
13[138 69[{ TeXBase1Encoding ReEncodeFont }9 206.559
/NimbusSanL-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop
0 0 -2302361 0 6344826 0 17191935
 449 -355 a

 449 -355 a 449 -355
a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 /pgffc{1 setgray}def

 -53.89622 -42.55768 moveto

 -53.89622 -42.55768 moveto

 -53.89622 53.89622 lineto

 207.45518 53.89622 lineto

 207.45518 -42.55768 lineto

 closepath

 207.45518 53.89622 moveto

 gsave pgffc pgffill grestore newpath

 restore

 restore

 save

 save

 save

 [1.0 0.0 0.0 1.0 43.9376 5.42336 ] concat

 pgfs


 449 -355 a
 0 setgray
 449 -355 a 0 TeXcolorgray Fa(Embed)n(ded)p
Black 449 -355 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 43.9376 -20.7483 ] concat

 pgfs


 449 -355 a
 0 setgray
 449 -355 a 0 TeXcolorgray
Fa(Systems)p Black 449 -355 a


 pgfr

 restore

 restore

 save

 /pgffc{0 0.65099 0.83922 setrgbcolor}def

 -11.33855 -11.33855 moveto

 -11.33855 -7.35344 moveto

 -11.33855 7.35344 lineto

 -11.33855 9.55438 -9.55438 11.33855 -7.35344 11.33855 curveto

 7.35344 11.33855 lineto

 9.55438 11.33855 11.33855 9.55438 11.33855 7.35344 curveto

 11.33855 -7.35344 lineto

 11.33855 -9.55438 9.55438 -11.33855 7.35344 -11.33855 curveto

 -7.35344 -11.33855 lineto

 -9.55438 -11.33855 -11.33855 -9.55438 -11.33855 -7.35344 curveto

 closepath

 11.33855 11.33855 moveto

 gsave pgffc pgffill grestore newpath

 restore

 save

 5.66934 pgfw
 0 TeXcolorgray
 -5.66927 35.43349 moveto

 21.2601 35.43349 lineto

 29.08795 35.43349 35.43349 29.08795 35.43349 21.2601 curveto

 35.43349 -21.2601 lineto

 35.43349 -29.08795 29.08795 -35.43349 21.2601 -35.43349 curveto

 -21.2601 -35.43349 lineto

 -29.08795 -35.43349 -35.43349 -29.08795 -35.43349 -21.2601 curveto

 -35.43349 5.66927 lineto

 pgfstr
 Black
 restore

 save

 1 setlinecap

 3.54333 pgfw
 0 0.65099 0.83922
TeXcolorrgb
 -17.00781 0.0 moveto

 -22.6771 0.0 lineto

 pgfstr
 Black
 restore

 save

 1 setlinecap

 3.54333 pgfw
 0 0.65099 0.83922 TeXcolorrgb
 -17.00781 -8.50368 moveto

 -22.6771 -8.50368 lineto

 pgfstr
 Black
 restore

 save

 1 setlinecap

 3.54333 pgfw

0 0.65099 0.83922 TeXcolorrgb
 17.00781 8.50368 moveto

 22.6771 8.50368 lineto

 pgfstr
 Black
 restore

 save

 1 setlinecap

 3.54333 pgfw
 0 0.65099 0.83922
TeXcolorrgb
 17.00781 0.0 moveto

 22.6771 0.0 lineto

 pgfstr
 Black
 restore

 save

 1 setlinecap

 3.54333 pgfw
 0 0.65099 0.83922 TeXcolorrgb
 17.00781 -8.50368 moveto

 22.6771 -8.50368 lineto

 pgfstr
 Black
 restore

 save

 1 setlinecap

 3.54333 pgfw

0 0.65099 0.83922 TeXcolorrgb
 8.50368 -17.00781 moveto

 8.50368 -22.6771 lineto

 pgfstr
 Black
 restore

 save

 1 setlinecap

 3.54333 pgfw
 0 0.65099 0.83922
TeXcolorrgb
 0.0 -17.00781 moveto

 0.0 -22.6771 lineto

 pgfstr
 Black
 restore

 save

 1 setlinecap

 3.54333 pgfw
 0 0.65099 0.83922 TeXcolorrgb
 -8.50368 -17.00781 moveto

 -8.50368 -22.6771 lineto

 pgfstr
 Black
 restore

 save

 1 setlinecap

 3.54333 pgfw

0 0.65099 0.83922 TeXcolorrgb
 8.50368 17.00781 moveto

 8.50368 22.6771 lineto

 pgfstr
 Black
 restore

 save

 1 setlinecap

 3.54333 pgfw
 0 0.65099 0.83922
TeXcolorrgb
 0.0 17.00781 moveto

 0.0 22.6771 lineto

 pgfstr
 Black
 restore

 save

 5.66934 pgfw
 0 0.65099 0.83922 TeXcolorrgb
 -11.33855 24.09494 moveto

 -18.38379 24.09494 -24.09494 18.38379 -24.09494 11.33855 curveto

 pgfstr
 Black
 restore

 save

 5.66934 pgfw

0 0.65099 0.83922 TeXcolorrgb
 -11.33855 35.43349 moveto

 -24.64597 35.43349 -35.43349 24.64597 -35.43349 11.33855 curveto

 pgfstr
 Black
 restore

 save

 5.66934 pgfw
 0 0.65099 0.83922
TeXcolorrgb
 -11.33855 46.77203 moveto

 -30.90817 46.77203 -46.77203 30.90817 -46.77203 11.33855 curveto

 pgfstr
 Black
 restore

 0.3985 pgfw

 restore

 newpath

 restore

 pgfc


 eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
